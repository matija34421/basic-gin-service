services:
  db:
    image: postgres:16-alpine
    container_name: basic_gin_db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
      POSTGRES_DB: ${DB_NAME:-basic_gin}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-basic_gin}"]
      interval: 5s
      timeout: 3s
      retries: 20

  migrate:
    image: migrate/migrate:4
    container_name: basic_gin_migrate
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./migrations:/migrations
    command: [
      "-path", "/migrations",
      "-database", "postgres://postgres:${DB_PASSWORD:-postgres}@db:${DB_PORT:-5432}/${DB_NAME:-basic_gin}?sslmode=disable",
      "up"
    ]
    restart: "no"

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: basic_gin_app
    depends_on:
      migrate:
        condition: service_completed_successfully

    env_file:
      - .env

    environment:
      SERVER_PORT: ${SERVER_PORT:-8080}

      DB_HOST: db
      DB_PORT: ${DB_PORT:-5432}
      DB_USER: ${DB_USER:-postgres}
      DB_PASS: ${DB_PASSWORD:-postgres}
      DB_NAME: ${DB_NAME:-basic_gin}

      DB_DSN: postgres://${DB_USER:-postgres}:${DB_PASSWORD:-postgres}@db:${DB_PORT:-5432}/${DB_NAME:-basic_gin}?sslmode=disable

    ports:
      - "8080:8080"

    restart: "no"

volumes:
  pgdata:
